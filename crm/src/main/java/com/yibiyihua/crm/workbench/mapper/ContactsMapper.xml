<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yibiyihua.crm.workbench.mapper.ContactsMapper" >
  <!--实体类属性、列名映射-->
  <resultMap id="BaseResultMap" type="contacts" >
    <id column="id" property="id"/>
    <result column="owner" property="owner"/>
    <result column="source" property="source"/>
    <result column="customer_id" property="customerId"/>
    <result column="full_name" property="fullName"/>
    <result column="appellation" property="appellation"/>
    <result column="email" property="email"/>
    <result column="mphone" property="mphone"/>
    <result column="job" property="job"/>
    <result column="create_by" property="createBy"/>
    <result column="create_time" property="createTime"/>
    <result column="edit_by" property="editBy"/>
    <result column="edit_time" property="editTime"/>
    <result column="description" property="description"/>
    <result column="contact_summary" property="contactSummary"/>
    <result column="next_contact_time" property="nextContactTime"/>
    <result column="address" property="address"/>
  </resultMap>
  <!--sql片段-->
  <sql id="Base_Column_List" >
    id, owner, source, customer_id, full_name, appellation, email, mphone, job, create_by, 
    create_time, edit_by, edit_time, description, contact_summary, next_contact_time, 
    address
  </sql>

  <!--
  添加联系人
  int insertContacts(Contacts contacts)-->
  <insert id="insertContacts" parameterType="contacts">
    insert into tbl_contacts (id, owner, source, customer_id, full_name, appellation, email, mphone, job, create_by,
                              create_time, description, contact_summary, next_contact_time, address)
    values (#{id}, #{owner}, #{source}, #{customerId}, #{fullName}, #{appellation}, #{email}, #{mphone}, #{job},
            #{createBy}, #{createTime}, #{description}, #{contactSummary}, #{nextContactTime}, #{address})
  </insert>

  <!--
  根据客户ids删除客户联系人
  int deleteContactsByCustomerIds(String[] customerIds)-->
  <delete id="deleteContactsByCustomerIds" parameterType="string">
    delete from tbl_contacts
    where customer_id in
    <foreach collection="array" item="customerId" open="(" separator="," close=")">
      #{customerId}
    </foreach>
  </delete>

  <!--
  根据客户id查询联系人
  List<Contacts> selectContactsByCustomerId(String customerId)-->
  <select id="selectContactsByCustomerId" parameterType="string" resultMap="BaseResultMap">
    select id, full_name, email, mphone
    from tbl_contacts
    where customer_id = #{customerId}
    order by create_time desc
  </select>

  <!--
  根据id删除联系人
  int deleteContactsById(String id)-->
  <delete id="deleteContactsById" parameterType="string">
    delete from tbl_contacts
    where id = #{id}
  </delete>

  <!--
  根据查询条件分页查询联系人
  List<Contacts> selectContactsByConditionForPage(Map<String, Object> map)-->
  <select id="selectContactsByConditionForPage" parameterType="map" resultMap="BaseResultMap">
    select c1.id,c1.full_name,c2.name as customer_id,u.name as owner,dv.value as source
    from tbl_contacts c1
    left join tbl_customer c2 on c1.customer_id = c2.id
    join tbl_user u on c1.owner = u.id
    left join tbl_dic_value dv on c1.source = dv.id
    <where>
      <if test="fullName != null and fullName != ''">
        and c1.full_name like concat('%',#{fullName},'%')
      </if>
      <if test="customerId != null and customerId != ''">
        and c2.name like concat('%',#{customerId},'%')
      </if>
      <if test="owner != null and owner != ''">
        and u.name like concat('%',#{owner},'%')
      </if>
      <if test="source != null and source != ''">
        and dv.id = #{source}
      </if>
    </where>
    order by c1.create_time desc
    limit #{beginNo},#{pageSize}
  </select>

  <!--
  根据条件查询联系人总记录条数
  int selectCountByCondition(Map<String, Object> map)-->
  <select id="selectCountByCondition" parameterType="map" resultType="int">
    select count(*)
    from tbl_contacts c1
    join tbl_customer c2 on c1.customer_id = c2.id
    join tbl_user u on c1.owner = u.id
    join tbl_dic_value dv on c1.source = dv.id
    <where>
      <if test="fullName != null and fullName != ''">
        and c1.full_name like concat('%',#{fullName},'%')
      </if>
      <if test="customerId != null and customerId != ''">
        and c2.name like #{customerId}
      </if>
      <if test="owner != null and owner != ''">
        and u.name like concat('%',#{owner},'%')
      </if>
      <if test="source != null and source != ''">
        and dv.id = #{source}
      </if>
    </where>
  </select>

  <!--
  根据ids删除联系人记录
  int deleteContactsByIds(String[] ids)-->
  <delete id="deleteContactsByIds" parameterType="string">
    delete
    from tbl_contacts
    where id in
    <foreach collection="array" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>

  <!--
  根据id查询联系人信息
  Contacts selectContactsById(String id)-->
  <select id="selectContactsById" parameterType="string" resultMap="BaseResultMap">
    select c1.id,
           c1.owner,
           c1.source,
           c1.full_name,
           c1.appellation,
           c1.job,
           c1.mphone,
           c1.email,
           c2.name as customer_id,
           c1.description,
           c1.contact_summary,
           c1.next_contact_time,
           c1.address
    from tbl_contacts c1
    left join tbl_customer c2 on c1.customer_id = c2.id
    where c1.id = #{id}
  </select>

  <!--
  根据id更新联系人
  int updateContactsById(Contacts contacts)-->
  <update id="updateContactsById" parameterType="contacts">
    update tbl_contacts
    set owner = #{owner},
        source = #{source},
        customer_id = #{customerId},
        full_name = #{fullName},
        appellation = #{appellation},
        email = #{email},
        mphone = #{mphone},
        job = #{job},
        edit_by = #{editBy},
        edit_time = #{editTime},
        description = #{description},
        contact_summary = #{contactSummary},
        next_contact_time = #{nextContactTime},
        address = #{address}
    where id = #{id}
  </update>

  <!--
  根据id查询联系人详细信息
  Contacts selectContactsForDetailByContactsId(String id)-->
  <select id="selectContactsForDetailByContactsId" parameterType="string" resultMap="BaseResultMap">
    select c1.id,
           u1.name   as owner,
           dv1.value as source,
           c2.name   as customer_id,
           c1.full_name,
           dv2.value as appellation,
           c1.email,
           c1.mphone,
           c1.job,
           u2.name   as create_by,
           c1.create_time,
           u3.name   as edit_by,
           c1.edit_time,
           c1.description,
           c1.contact_summary,
           c1.next_contact_time,
           c1.address
    from tbl_contacts c1
           join tbl_user u1 on c1.owner = u1.id
           left join tbl_dic_value dv1 on c1.source = dv1.id
           left join tbl_customer c2 on c1.customer_id = c2.id
           left join tbl_dic_value dv2 on c1.appellation = dv2.id
           join tbl_user u2 on c1.create_by = u2.id
           left join tbl_user u3 on c1.edit_by = u3.id
    where c1.id = #{id}
  </select>

  <!--
  根据名称模糊查询联系人
  List<Contacts> selectContactsByNameLike(Map<String,Object> map)-->
  <select id="selectContactsByNameLike" parameterType="map" resultMap="BaseResultMap">
    select c1.id, c1.full_name, c1.email, c1.mphone
    from tbl_contacts c1
    join tbl_customer c2 on c1.customer_id = c2.id
    where c1.full_name like concat('%', #{fullName}, '%')
    <if test="customerName != null and customerName != ''">
      and c2.name = #{customerName}
    </if>
  </select>
</mapper>